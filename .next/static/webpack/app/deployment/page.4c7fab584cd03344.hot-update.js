"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/deployment/page",{

/***/ "(app-pages-browser)/./src/services/api/deploymind.ts":
/*!****************************************!*\
  !*** ./src/services/api/deploymind.ts ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deployAgentAPI: function() { return /* binding */ deployAgentAPI; }\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"(app-pages-browser)/./src/services/api/client.ts\");\n\nclass DeployAgentAPI {\n    // Initialize a new chat session\n    async initializeChat() {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/deploymind/chat/init\");\n        return response.data.data;\n    }\n    // Send a message to DeployAgent\n    async sendMessage(message, sessionId, contextId) {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/deploymind/chat/message\", {\n            message,\n            sessionId,\n            contextId\n        });\n        return response.data.data;\n    }\n    // Get chat history for a session\n    async getChatHistory(sessionId) {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/deploymind/chat/\".concat(sessionId, \"/history\"));\n        return response.data.data;\n    }\n    // Analyze a project for deployment\n    async analyzeProject(repository, requirements) {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/deploymind/analyze\", {\n            repository,\n            requirements\n        });\n        return response.data.data;\n    }\n    // Get list of user's deployments\n    async getDeployments() {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/deploymind/deployments\", {\n            params: {\n                page,\n                limit\n            }\n        });\n        return response.data.data;\n    }\n    // Get deployment status\n    async getDeploymentStatus(contextId) {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/deploymind/deployments/\".concat(contextId, \"/status\"));\n        return response.data.data;\n    }\n    // Submit feedback for a deployment\n    async submitFeedback(contextId, rating, comment) {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/deploymind/deployments/\".concat(contextId, \"/feedback\"), {\n            rating,\n            comment\n        });\n        return response.data;\n    }\n    // Get knowledge base statistics\n    async getKnowledgeStats() {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/deploymind/knowledge/stats\");\n        return response.data.data;\n    }\n    // Seed knowledge base (admin only)\n    async seedKnowledgeBase() {\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/deploymind/knowledge/seed\");\n        return response.data;\n    }\n}\nconst deployAgentAPI = new DeployAgentAPI();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api/deploymind.ts\n"));

/***/ })

});